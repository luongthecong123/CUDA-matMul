<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{59F2BB04-5240-3AC6-838C-4B5F0DBC8CE9}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>matmul</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.8.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\Cpp\cudaCode\matMul\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">matmul.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">matmul</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\Cpp\cudaCode\matMul\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">matmul.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">matmul</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\Cpp\cudaCode\matMul\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">matmul.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">matmul</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\Cpp\cudaCode\matMul\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">matmul.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">matmul</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Include>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(Include)</Include>
      <Defines>%(Defines);_WINDOWS;CMAKE_INTDIR="Debug"</Defines>
      <AdditionalOptions>%(AdditionalOptions) -std=c++17 --generate-code=arch=compute_52,code=[compute_52,sm_52] -Xcompiler="/EHsc -Ob0 -Zi"</AdditionalOptions>
      <CodeGeneration></CodeGeneration>
      <CompileOut>$(IntDir)%(Filename).obj</CompileOut>
      <CudaRuntime>Static</CudaRuntime>
      <GPUDebugInfo>false</GPUDebugInfo>
      <GenerateRelocatableDeviceCode>true</GenerateRelocatableDeviceCode>
      <Optimization>Od</Optimization>
      <Runtime>MDd</Runtime>
      <RuntimeChecks>RTC1</RuntimeChecks>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <UseHostInclude>false</UseHostInclude>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart.lib;cudadevrt.lib;cudart_static.lib;E:\Cpp\vcpkg\installed\x64-windows\lib\*.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64/$(Configuration);E:/Cpp/vcpkg/installed/x64-windows/lib;E:/Cpp/vcpkg/installed/x64-windows/lib/$(Configuration);E:/Cpp/vcpkg/installed/x64-windows/lib/manual-link;E:/Cpp/vcpkg/installed/x64-windows/lib/manual-link/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Cpp/cudaCode/matMul/build/Debug/matmul.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Cpp/cudaCode/matMul/build/Debug/matmul.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets -D_WINDOWS -Xcompiler=" /EHsc" -Xcompiler=" -Ob0 -Od /RTC1" "--generate-code=arch=compute_52,code=[compute_52,sm_52]" -Xcompiler=-MDd -Xcompiler=-Zi</AdditionalOptions>
      <PerformDeviceLink>true</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Include>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(Include)</Include>
      <Defines>%(Defines);_WINDOWS;NDEBUG;CMAKE_INTDIR="Release"</Defines>
      <AdditionalOptions>%(AdditionalOptions) -std=c++17 --generate-code=arch=compute_52,code=[compute_52,sm_52] -Xcompiler="/EHsc -Ob2"</AdditionalOptions>
      <CodeGeneration></CodeGeneration>
      <CompileOut>$(IntDir)%(Filename).obj</CompileOut>
      <CudaRuntime>Static</CudaRuntime>
      <GPUDebugInfo>false</GPUDebugInfo>
      <GenerateRelocatableDeviceCode>true</GenerateRelocatableDeviceCode>
      <Optimization>O2</Optimization>
      <Runtime>MD</Runtime>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <UseHostInclude>false</UseHostInclude>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart.lib;cudadevrt.lib;cudart_static.lib;E:\Cpp\vcpkg\installed\x64-windows\lib\*.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64/$(Configuration);E:/Cpp/vcpkg/installed/x64-windows/lib;E:/Cpp/vcpkg/installed/x64-windows/lib/$(Configuration);E:/Cpp/vcpkg/installed/x64-windows/lib/manual-link;E:/Cpp/vcpkg/installed/x64-windows/lib/manual-link/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Cpp/cudaCode/matMul/build/Release/matmul.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Cpp/cudaCode/matMul/build/Release/matmul.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets -D_WINDOWS -Xcompiler=" /EHsc" -Xcompiler="-O2 -Ob2" -DNDEBUG "--generate-code=arch=compute_52,code=[compute_52,sm_52]" -Xcompiler=-MD</AdditionalOptions>
      <PerformDeviceLink>true</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Include>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(Include)</Include>
      <Defines>%(Defines);_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel"</Defines>
      <AdditionalOptions>%(AdditionalOptions) -std=c++17 --generate-code=arch=compute_52,code=[compute_52,sm_52] -Xcompiler="/EHsc -Ob1"</AdditionalOptions>
      <CodeGeneration></CodeGeneration>
      <CompileOut>$(IntDir)%(Filename).obj</CompileOut>
      <CudaRuntime>Static</CudaRuntime>
      <GPUDebugInfo>false</GPUDebugInfo>
      <GenerateRelocatableDeviceCode>true</GenerateRelocatableDeviceCode>
      <Optimization>O1</Optimization>
      <Runtime>MD</Runtime>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <UseHostInclude>false</UseHostInclude>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart.lib;cudadevrt.lib;cudart_static.lib;E:\Cpp\vcpkg\installed\x64-windows\lib\*.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64/$(Configuration);E:/Cpp/vcpkg/installed/x64-windows/lib;E:/Cpp/vcpkg/installed/x64-windows/lib/$(Configuration);E:/Cpp/vcpkg/installed/x64-windows/lib/manual-link;E:/Cpp/vcpkg/installed/x64-windows/lib/manual-link/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Cpp/cudaCode/matMul/build/MinSizeRel/matmul.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Cpp/cudaCode/matMul/build/MinSizeRel/matmul.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets -D_WINDOWS -Xcompiler=" /EHsc" -Xcompiler="-O1 -Ob1" -DNDEBUG "--generate-code=arch=compute_52,code=[compute_52,sm_52]" -Xcompiler=-MD</AdditionalOptions>
      <PerformDeviceLink>true</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Include>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(Include)</Include>
      <Defines>%(Defines);_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo"</Defines>
      <AdditionalOptions>%(AdditionalOptions) -std=c++17 --generate-code=arch=compute_52,code=[compute_52,sm_52] -Xcompiler="/EHsc -Ob1 -Zi"</AdditionalOptions>
      <CodeGeneration></CodeGeneration>
      <CompileOut>$(IntDir)%(Filename).obj</CompileOut>
      <CudaRuntime>Static</CudaRuntime>
      <GPUDebugInfo>false</GPUDebugInfo>
      <GenerateRelocatableDeviceCode>true</GenerateRelocatableDeviceCode>
      <Optimization>O2</Optimization>
      <Runtime>MD</Runtime>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <UseHostInclude>false</UseHostInclude>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Cpp\cudaCode\matMul\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart.lib;cudadevrt.lib;cudart_static.lib;E:\Cpp\vcpkg\installed\x64-windows\lib\*.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/lib/x64/$(Configuration);E:/Cpp/vcpkg/installed/x64-windows/lib;E:/Cpp/vcpkg/installed/x64-windows/lib/$(Configuration);E:/Cpp/vcpkg/installed/x64-windows/lib/manual-link;E:/Cpp/vcpkg/installed/x64-windows/lib/manual-link/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Cpp/cudaCode/matMul/build/RelWithDebInfo/matmul.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Cpp/cudaCode/matMul/build/RelWithDebInfo/matmul.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets -D_WINDOWS -Xcompiler=" /EHsc" -Xcompiler=" -O2 -Ob1" -DNDEBUG "--generate-code=arch=compute_52,code=[compute_52,sm_52]" -Xcompiler=-MD -Xcompiler=-Zi</AdditionalOptions>
      <PerformDeviceLink>true</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\Cpp\cudaCode\matMul\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule E:/Cpp/cudaCode/matMul/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\mingw64\bin\cmake.exe -SE:/Cpp/cudaCode/matMul -BE:/Cpp/cudaCode/matMul/build --check-stamp-file E:/Cpp/cudaCode/matMul/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\mingw64\share\cmake-3.28\Modules\CMakeCUDACompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeCUDACompilerABI.cu;C:\mingw64\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXCompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXCompilerABI.cpp;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCompilerIdDetection.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCUDACompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCXXCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompileFeatures.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompilerABI.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompilerId.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineRCCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineSystem.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeFindBinUtils.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseImplicitIncludeInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseImplicitLinkInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseLibraryArchitecture.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeRCCompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeSystem.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCUDACompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCXXCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCompilerCommon.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestRCCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ADSP-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ARMCC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ARMClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\AppleClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Borland-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Cray-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\CrayClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GHS-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GNU-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\HP-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IAR-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Intel-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\LCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVHPC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\OrangeC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\PGI-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\PathScale-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SCO-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\TI-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Tasking-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Watcom-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XL-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\zOS-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CompilerId\VS-10.vcxproj.in;C:\mingw64\share\cmake-3.28\Modules\FindCUDAToolkit.cmake;C:\mingw64\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\mingw64\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesAll.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesNative.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesValidate.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAFilterImplicitLibs.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeNVCCFilterImplicitInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeNVCCParseImplicitInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\FeatureTesting.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-Determine-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeCUDACompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeCXXCompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeRCCompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\Cpp\cudaCode\matMul\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule E:/Cpp/cudaCode/matMul/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\mingw64\bin\cmake.exe -SE:/Cpp/cudaCode/matMul -BE:/Cpp/cudaCode/matMul/build --check-stamp-file E:/Cpp/cudaCode/matMul/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\mingw64\share\cmake-3.28\Modules\CMakeCUDACompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeCUDACompilerABI.cu;C:\mingw64\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXCompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXCompilerABI.cpp;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCompilerIdDetection.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCUDACompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCXXCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompileFeatures.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompilerABI.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompilerId.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineRCCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineSystem.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeFindBinUtils.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseImplicitIncludeInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseImplicitLinkInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseLibraryArchitecture.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeRCCompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeSystem.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCUDACompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCXXCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCompilerCommon.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestRCCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ADSP-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ARMCC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ARMClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\AppleClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Borland-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Cray-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\CrayClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GHS-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GNU-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\HP-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IAR-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Intel-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\LCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVHPC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\OrangeC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\PGI-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\PathScale-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SCO-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\TI-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Tasking-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Watcom-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XL-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\zOS-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CompilerId\VS-10.vcxproj.in;C:\mingw64\share\cmake-3.28\Modules\FindCUDAToolkit.cmake;C:\mingw64\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\mingw64\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesAll.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesNative.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesValidate.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAFilterImplicitLibs.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeNVCCFilterImplicitInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeNVCCParseImplicitInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\FeatureTesting.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-Determine-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeCUDACompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeCXXCompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeRCCompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\Cpp\cudaCode\matMul\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule E:/Cpp/cudaCode/matMul/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\mingw64\bin\cmake.exe -SE:/Cpp/cudaCode/matMul -BE:/Cpp/cudaCode/matMul/build --check-stamp-file E:/Cpp/cudaCode/matMul/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\mingw64\share\cmake-3.28\Modules\CMakeCUDACompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeCUDACompilerABI.cu;C:\mingw64\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXCompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXCompilerABI.cpp;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCompilerIdDetection.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCUDACompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCXXCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompileFeatures.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompilerABI.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompilerId.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineRCCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineSystem.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeFindBinUtils.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseImplicitIncludeInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseImplicitLinkInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseLibraryArchitecture.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeRCCompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeSystem.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCUDACompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCXXCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCompilerCommon.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestRCCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ADSP-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ARMCC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ARMClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\AppleClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Borland-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Cray-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\CrayClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GHS-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GNU-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\HP-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IAR-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Intel-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\LCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVHPC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\OrangeC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\PGI-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\PathScale-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SCO-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\TI-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Tasking-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Watcom-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XL-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\zOS-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CompilerId\VS-10.vcxproj.in;C:\mingw64\share\cmake-3.28\Modules\FindCUDAToolkit.cmake;C:\mingw64\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\mingw64\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesAll.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesNative.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesValidate.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAFilterImplicitLibs.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeNVCCFilterImplicitInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeNVCCParseImplicitInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\FeatureTesting.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-Determine-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeCUDACompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeCXXCompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeRCCompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\Cpp\cudaCode\matMul\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule E:/Cpp/cudaCode/matMul/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\mingw64\bin\cmake.exe -SE:/Cpp/cudaCode/matMul -BE:/Cpp/cudaCode/matMul/build --check-stamp-file E:/Cpp/cudaCode/matMul/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\mingw64\share\cmake-3.28\Modules\CMakeCUDACompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeCUDACompilerABI.cu;C:\mingw64\share\cmake-3.28\Modules\CMakeCUDAInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXCompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXCompilerABI.cpp;C:\mingw64\share\cmake-3.28\Modules\CMakeCXXInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCommonLanguageInclude.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeCompilerIdDetection.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCUDACompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCXXCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompileFeatures.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompilerABI.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineCompilerId.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineRCCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeDetermineSystem.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeFindBinUtils.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeGenericSystem.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeInitializeConfigs.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeLanguageInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseImplicitIncludeInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseImplicitLinkInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeParseLibraryArchitecture.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeRCCompiler.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeRCInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeSystem.cmake.in;C:\mingw64\share\cmake-3.28\Modules\CMakeSystemSpecificInformation.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeSystemSpecificInitialize.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCUDACompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCXXCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestCompilerCommon.cmake;C:\mingw64\share\cmake-3.28\Modules\CMakeTestRCCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ADSP-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ARMCC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\ARMClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\AppleClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Borland-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Cray-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\CrayClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GHS-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GNU-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\HP-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IAR-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Intel-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\LCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\MSVC.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVHPC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA-CUDA.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\NVIDIA.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\OrangeC-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\PGI-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\PathScale-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SCO-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\TI-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Tasking-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\Watcom-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XL-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\zOS-C-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;C:\mingw64\share\cmake-3.28\Modules\CompilerId\VS-10.vcxproj.in;C:\mingw64\share\cmake-3.28\Modules\FindCUDAToolkit.cmake;C:\mingw64\share\cmake-3.28\Modules\FindPackageHandleStandardArgs.cmake;C:\mingw64\share\cmake-3.28\Modules\FindPackageMessage.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesAll.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesNative.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAArchitecturesValidate.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeCUDAFilterImplicitLibs.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeNVCCFilterImplicitInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\CMakeNVCCParseImplicitInfo.cmake;C:\mingw64\share\cmake-3.28\Modules\Internal\FeatureTesting.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-Determine-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-Initialize.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-MSVC-CXX.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-MSVC.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\Windows.cmake;C:\mingw64\share\cmake-3.28\Modules\Platform\WindowsPaths.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeCUDACompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeCXXCompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeRCCompiler.cmake;E:\Cpp\cudaCode\matMul\build\CMakeFiles\3.28.2\CMakeSystem.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\Cpp\cudaCode\matMul\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="E:\Cpp\cudaCode\matMul\src\main.cpp" />
    <CudaCompile Include="..\src\matmul_gpu.cu" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\Cpp\cudaCode\matMul\build\ZERO_CHECK.vcxproj">
      <Project>{2C5B5674-3CCD-344E-BB57-84470D4E708D}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.8.targets" />
  </ImportGroup>
</Project>